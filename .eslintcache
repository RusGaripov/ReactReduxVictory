[{"C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\index.tsx":"1","C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\components\\App.tsx":"2","C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\store\\index.ts":"3","C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\components\\NotFound\\NotFound.tsx":"4","C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\components\\Spinner\\Spinner.tsx":"5","C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\store\\actions\\index.ts":"6","C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\store\\reducers\\index.ts":"7","C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\store\\reducers\\dataReducer.ts":"8","C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\store\\actions\\dataActions.ts":"9","C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\components\\Graphs\\Graphs.tsx":"10"},{"size":378,"mtime":1609314277761,"results":"11","hashOfConfig":"12"},{"size":486,"mtime":1610278699903,"results":"13","hashOfConfig":"12"},{"size":293,"mtime":1609577434109,"results":"14","hashOfConfig":"12"},{"size":408,"mtime":1609365688595,"results":"15","hashOfConfig":"12"},{"size":517,"mtime":1609577100503,"results":"16","hashOfConfig":"12"},{"size":34,"mtime":1610277685398,"results":"17","hashOfConfig":"12"},{"size":217,"mtime":1610278488783,"results":"18","hashOfConfig":"12"},{"size":410,"mtime":1610279527948,"results":"19","hashOfConfig":"12"},{"size":381,"mtime":1610281022854,"results":"20","hashOfConfig":"12"},{"size":7173,"mtime":1610281481253,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"14d2kx6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\index.tsx",[],["45","46"],"C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\components\\App.tsx",[],"C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\store\\index.ts",[],"C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\components\\NotFound\\NotFound.tsx",[],"C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\components\\Spinner\\Spinner.tsx",[],"C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\store\\actions\\index.ts",[],"C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\store\\reducers\\index.ts",[],"C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\store\\reducers\\dataReducer.ts",["47"],"import * as actions from \"../actions\"\r\n\r\n\r\n type InitialStateType = {\r\n    period: object | null ,\r\n}\r\n\r\nconst initialState : InitialStateType = {\r\n    period: null,\r\n};\r\n\r\nexport default (state =initialState,action:any) : InitialStateType => {\r\n    switch (action.type) {\r\n        case actions.GET_DATA:\r\n            return {...state,period:action.period}\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\store\\actions\\dataActions.ts",[],"C:\\Users\\Natalia\\Projects\\newtask-typescript\\src\\components\\Graphs\\Graphs.tsx",["48"],"import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport {getData} from \"../../store/actions/dataActions\"\r\nimport Spinner from \"../Spinner/Spinner\"\r\nimport {VictoryChart,VictoryAxis,VictoryBar,VictoryLabel,VictoryTheme} from 'victory';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\ninterface IPostsProps {\r\ngetData:any,\r\nperiod:any,\r\n}\r\n\r\ninterface IPostsState {\r\n  from:string,\r\n  to:string,\r\n}\r\n\r\n \r\nexport class Posts extends Component <IPostsProps,IPostsState> {\r\n  \r\n        state = {\r\n           from:'2020-05-01',\r\n           to:'2020-05-15',\r\n        };\r\n \r\n      \r\n   componentDidMount() {\r\n      this.props.getData();\r\n   }\r\n\r\n   onChange=(e:React.ChangeEvent <HTMLInputElement>)=> {\r\n      this.setState({ [e.target.name]: e.target.value} as any);\r\n};\r\n\r\n   onSubmit=(e:React.FormEvent <HTMLFormElement>)=> {\r\n    e.preventDefault();\r\n    this.props.getData(this.state.from,this.state.to);\r\n    }\r\n\r\n  \r\n    render() {\r\n     var element:any={},cart=[];\r\n      if(this.props.period!=undefined&&this.props.period!=null){\r\n           const arr3 = Object.keys(this.props.period).map((item:any) => item);\r\n    \r\n        for(var i=0;i<arr3.length;i++){\r\n           element.date=arr3[i];\r\n           element.volume=this.props.period[arr3[i]]['countries']['Russia'].today_new_confirmed\r\n           element.recovered=this.props.period[arr3[i]]['countries']['Russia'].today_new_recovered\r\n           element.deaths=this.props.period[arr3[i]]['countries']['Russia'].today_new_deaths\r\n           cart.push({date:arr3[i],volume:this.props.period[arr3[i]]['countries']['Russia'].today_new_confirmed,recovered:this.props.period[arr3[i]]['countries']['Russia'].today_new_recovered,\r\n           deaths: this.props.period[arr3[i]]['countries']['Russia'].today_new_deaths\r\n          });\r\n      }\r\n    }\r\n        const {period} = this.props;\r\n\r\n        if(!period){\r\n            return <Spinner/>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n             <div className=\"row\" style={{ marginTop:\"20px\",marginBottom:\"20px\" }}>\r\n               <form className=\"card p-3 mx-auto col-md-6\" onSubmit={this.onSubmit}>\r\n                   <h2 className=\"text-center\">Выбрать период</h2>\r\n\r\n                   <div className=\"form-group\">\r\n                       <label htmlFor=\"from\">С</label>\r\n                       <input \r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"YYYY-MM-DD\"\r\n                        value={this.state.from} \r\n                        onChange={this.onChange} \r\n                        name=\"from\"/>\r\n                   </div>\r\n\r\n                   <div className=\"form-group\">\r\n                       <label htmlFor=\"to\">По</label>\r\n                       <input \r\n                        type=\"date\" \r\n                        placeholder=\"YYYY-MM-DD\"\r\n                        className=\"form-control\" \r\n                        value={this.state.to} \r\n                        onChange={this.onChange} \r\n                        name=\"to\"/>\r\n                   </div>\r\n                   <button type=\"submit\" className=\"btn btn-primary btn-lg\" style={{ marginTop:\"20px\",marginBottom:\"20px\" }}>Получить данные</button>\r\n               </form>\r\n           </div>\r\n\r\n            {/* Total new cases */}\r\n\r\n            \r\n          <VictoryChart\r\n             theme={VictoryTheme.material}\r\n             domainPadding={{ x: 15 }}  \r\n             height={200}\r\n             width={600}\r\n  \r\n          >\r\n          <VictoryAxis\r\n              axisLabelComponent={<VictoryLabel dy={20}/>}\r\n              label=\"Day\"\r\n              style={{\r\n                tickLabels: {\r\n                fontSize: 4, \r\n              },\r\n              axisLabel: {\r\n                fontSize: 8,\r\n                padding: 10\r\n              },\r\n              }}\r\n          />\r\n          <VictoryAxis\r\n             dependentAxis\r\n             axisLabelComponent={<VictoryLabel dy={-30}/>}\r\n             label=\"Total new cases\"\r\n             style={{\r\n               tickLabels: {\r\n               fontSize: 4   \r\n             },\r\n             axisLabel: {\r\n               fontSize: 8,\r\n               padding: 10\r\n             }, \r\n            }}\r\n          />\r\n\r\n\r\n           <VictoryBar\r\n              barRatio={0.5}\r\n              style={{\r\n                 data: { fill: \"Maroon\"}\r\n              }}\r\n              data={cart} x=\"date\" y=\"volume\" \r\n           />\r\n          </VictoryChart>\r\n\r\n            {/* Total new recovered */}\r\n\r\n           <VictoryChart\r\n               theme={VictoryTheme.material}\r\n               domainPadding={{ x: 15 }}  \r\n               height={200}\r\n               width={600}\r\n           >\r\n           <VictoryAxis\r\n               axisLabelComponent={<VictoryLabel dy={20}/>}\r\n               label=\"Day\"\r\n               style={{\r\n                  tickLabels: {\r\n                  fontSize: 4,\r\n               },\r\n               axisLabel: {\r\n                  fontSize: 8,\r\n                  padding: 10\r\n               },\r\n               }}\r\n          />\r\n          <VictoryAxis\r\n               dependentAxis\r\n               axisLabelComponent={<VictoryLabel dy={-30}/>}\r\n               label=\"Total new recovered\"\r\n               style={{\r\n                 tickLabels: {\r\n                 fontSize: 4  \r\n               },\r\n               axisLabel: {\r\n                 fontSize: 8,\r\n                 padding: 10\r\n               },\r\n              }}\r\n          />\r\n\r\n          <VictoryBar\r\n              barRatio={0.5}\r\n              style={{\r\n                 data: { fill: \"green\"},\r\n                 labels: { fill: \"orange\" }\r\n              }}\r\n              data={cart} x=\"date\" y=\"recovered\" \r\n          />\r\n          </VictoryChart>\r\n\r\n             {/* Total new deaths */}\r\n \r\n          <VictoryChart\r\n             theme={VictoryTheme.material}\r\n             domainPadding={{ x: 15 }}  \r\n             height={200}\r\n             width={600} \r\n          >\r\n          <VictoryAxis\r\n             axisLabelComponent={<VictoryLabel dy={20}/>}\r\n             label=\"Day\"\r\n             style={{\r\n                tickLabels: {\r\n                fontSize: 4,\r\n             },\r\n             axisLabel: {\r\n                 fontSize: 8,\r\n                 padding: 10\r\n             },\r\n            }}\r\n          />\r\n          <VictoryAxis\r\n             dependentAxis\r\n             axisLabelComponent={<VictoryLabel dy={-30}/>}\r\n             label=\"Total new deaths\"\r\n             style={{\r\n                tickLabels: {\r\n                fontSize: 4  \r\n             },\r\n            axisLabel: {\r\n               fontSize: 8,\r\n               padding: 10\r\n             },\r\n            }}\r\n         />\r\n\r\n          <VictoryBar\r\n             barRatio={0.5}\r\n             style={{\r\n                  data: { fill: \"red\"},\r\n             }}\r\n             data={cart} x=\"date\" y=\"deaths\" \r\n         />\r\n \r\n  </VictoryChart>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state:any) => ({\r\n    period: state.dataReducer.period,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getData})(Posts)\r\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":12,"column":1,"nodeType":"55","endLine":19,"endColumn":2},{"ruleId":"56","severity":1,"message":"57","line":44,"column":27,"nodeType":"58","messageId":"59","endLine":44,"endColumn":29},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]